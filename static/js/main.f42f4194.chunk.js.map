{"version":3,"sources":["components/Weather.jsx","components/FormWeather.jsx","App.js","index.js"],"names":["minmaxTemp","min","max","className","Weather","city","temp_min","temp_max","temp","description","icon","FormWeather","onSubmitForm","onSubmit","type","placeholder","name","id","App","props","getWeather","e","a","preventDefault","valueCity","target","elements","value","valueCountry","country","fetch","api_call","json","response","setState","sys","ceilNum","main","weather","console","log","getWeatherIcon","weatherIcon","rangeId","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","num","Math","floor","state","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f42f4194.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Weather.scss'\r\n\r\nconst Weather = ({\r\n    city,\r\n    temp_min,\r\n    temp_max,\r\n    temp,\r\n    description,\r\n    icon\r\n}) => {\r\n    return (\r\n        <div className=\"weather\">\r\n            <div className=\"card__weather\">\r\n                <h1 className=\"card__city\">{city}</h1>\r\n                <i className={`card__status-img wi ${icon}`}></i>\r\n                {temp ? <h5 className=\"card__temp\">{temp}&deg;C</h5> : null}\r\n                {minmaxTemp(temp_min, temp_max)}\r\n                <h4 className=\"card__status\">{description}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst minmaxTemp = (min, max) => {\r\n    if (min && max) {\r\n\r\n        return (\r\n            <div className=\"card__wrap\">\r\n                <h5 className=\"wrap__temp-min\">{min}&deg;C</h5>\r\n                <h5 className=\"wrap__temp-max\">{max}&deg;C</h5>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Weather;","import React from 'react';\r\nimport './FormWeather.scss';\r\n\r\nconst FormWeather = ({ onSubmitForm }) => {\r\n\r\n    return (\r\n        <div className=\"form-weather\">\r\n            <form onSubmit={onSubmitForm}>\r\n                <div className=\"un-city\"></div>\r\n                <div className=\"un-country\"></div>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"City\"\r\n                    name=\"city\"\r\n                    id=\"input1\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Country\"\r\n                    name=\"country\"\r\n                    id=\"input2\"\r\n                />\r\n                <button type=\"submit\" >GET WEATHER</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormWeather;","import './App.css';\nimport Weather from './components/Weather';\nimport 'weather-icons/css/weather-icons.css';\nimport { Component } from 'react';\nimport FormWeather from './components/FormWeather';\n\nconst API_key = 'ec889380a80ef2e87e94bd8f434c0c85';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: '',\n      country: '',\n      temp: '',\n      temp_min: '',\n      temp_max: '',\n      description: '',\n      icon: '',\n    };\n    this.weatherIcon = {\n      Thunderstorm: 'wi-thunderstorm',\n      Drizzle: 'wi-sleet',\n      Rain: 'wi-rain',\n      Snow: 'wi-snow',\n      Atmosphere: 'wi-fog',\n      Clear: 'wi-day-sunny',\n      Clouds: 'wi-cloud'\n    }\n  }\n\n  getWeather = async (e) => {\n    e.preventDefault();\n    const valueCity = e.target.elements.city.value;\n    const valueCountry = e.target.elements.country.value;\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${valueCity},${valueCountry}&appid=${API_key}`)\n    const response = await api_call.json();\n    this.setState({\n      city: `${response.name}, ${response.sys.country}`,\n      temp: this.ceilNum(response.main.temp),\n      temp_min: this.ceilNum(response.main.temp_min),\n      temp_max: this.ceilNum(response.main.temp_max),\n      description: response.weather[0].main,\n    })\n    console.log(response);\n    this.getWeatherIcon(this.weatherIcon, response.weather[0].id)\n  }\n\n  getWeatherIcon = (rangeId) => {\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({ icon: this.weatherIcon.Thunderstorm })\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({ icon: this.weatherIcon.Drizzle })\n        break;\n\n      case rangeId >= 500 && rangeId <= 531:\n        this.setState({ icon: this.weatherIcon.Rain })\n        break;\n\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({ icon: this.weatherIcon.Snow })\n        break;\n\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({ icon: this.weatherIcon.Atmosphere })\n        break;\n\n      case rangeId === 800:\n        this.setState({ icon: this.weatherIcon.Clear })\n        break;\n\n      case rangeId >= 801 && rangeId <= 804:\n        console.log(this.weatherIcon.Clouds);\n        this.setState({ icon: this.weatherIcon.Clouds })\n\n      default:\n        this.setState({ icon: this.weatherIcon.Clouds })\n        break;\n    }\n  }\n\n  ceilNum = (num) => {\n    const tempNum = Math.floor(num - 273.15)\n    return tempNum\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <div id=\"stars\"></div>\n        <div id=\"stars2\"></div>\n        <div id=\"stars3\"></div>\n        <div className=\"app__wrap\">\n          <FormWeather onSubmitForm={this.getWeather} />\n          <Weather\n            city={this.state.city}\n            country={this.state.country}\n            temp={this.state.temp}\n            temp_min={this.state.temp_min}\n            temp_max={this.state.temp_max}\n            description={this.state.description}\n            icon={this.state.icon}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}